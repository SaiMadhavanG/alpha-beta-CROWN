Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: mnist64fc
  path: models/custom/mnist_fc_64x4_adv_1.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.1
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 4096
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
    reset_threshold: 1.0
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 180
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Mon Jun 10 17:10:21 2024 on SAI
Sequential(
  (0): Flatten(start_dim=1, end_dim=-1)
  (1): Linear(in_features=784, out_features=64, bias=True)
  (2): ReLU()
  (3): Linear(in_features=64, out_features=64, bias=True)
  (4): ReLU()
  (5): Linear(in_features=64, out_features=64, bias=True)
  (6): ReLU()
  (7): Linear(in_features=64, out_features=64, bias=True)
  (8): ReLU()
  (9): Linear(in_features=64, out_features=10, bias=True)
)
Parameters:
  1.weight: shape torch.Size([64, 784])
  1.bias: shape torch.Size([64])
  3.weight: shape torch.Size([64, 64])
  3.bias: shape torch.Size([64])
  5.weight: shape torch.Size([64, 64])
  5.bias: shape torch.Size([64])
  7.weight: shape torch.Size([64, 64])
  7.bias: shape torch.Size([64])
  9.weight: shape torch.Size([10, 64])
  9.bias: shape torch.Size([10])
Trying generic MNIST/CIFAR data loader.
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-5.86867189, -2.40661311, -0.60033691, -0.16585360, -4.26927996,
         -3.09942913, -8.71930218,  5.59404564, -4.67021132, -0.75928545]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 4, 1, 7] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 5, 1, 7] with unstable size 4 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [3]; unstable size 3; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 5, 1, 3] with unstable size 4 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [4]; unstable size 4; total size 64 ([1, 64])
layer /17 start_node /20 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [0]; unstable size 0; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.46429634,  5.62143850,  5.06476736,  4.58055878,  8.10547256,
          7.47913027, 12.39750481,  8.81187820,  5.33619833]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 1.5315 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-0.16497186, -0.68933529,  2.86758327,  0.94200748, -3.13602376,
         -3.27338743, -1.60777211, -2.08967018, -1.97366989, -5.50633192]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [8]; unstable size 8; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 8, 1, 8] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 4, 1, 8] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.11 using sparse-spec alpha [2, 8, 1, 8] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 4, 1, 7] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /15 start_node /input.11 using sparse-spec alpha [2, 8, 1, 7] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 64 ([1, 64])
layer /17 start_node /input.11 using sparse-spec alpha [2, 8, 1, 3] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /17 start_node /20 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.77145278,  2.52847862,  1.08925509,  4.71253157,  0.80612075,
         -1.04286551,  4.61082411,  3.37639976,  6.58069324]], device='cuda:0') None
best_l after optimization: 26.951799392700195
alpha/beta optimization time: 2.90261173248291
initial alpha-crown bounds: tensor([[ 1.80463064,  3.11985111,  1.29131579,  5.34752655,  0.96850979,
         -0.47631860,  4.65402174,  3.52998996,  6.71227121]], device='cuda:0')
Worst class: (+ rhs) -0.4763185977935791
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 64]), torch.Size([9, 1, 64]), torch.Size([9, 1, 64]), torch.Size([9, 1, 64])]

Properties batch 0, size 1
Remaining timeout: 176.9758243560791
##### Instance 1 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8046306371688843.

Properties batch 1, size 1
Remaining timeout: 176.8077781200409
##### Instance 1 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1198511123657227.

Properties batch 2, size 1
Remaining timeout: 176.69233584403992
##### Instance 1 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2913157939910889.

Properties batch 3, size 1
Remaining timeout: 176.58212327957153
##### Instance 1 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.347526550292969.

Properties batch 4, size 1
Remaining timeout: 176.49341750144958
##### Instance 1 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9685097932815552.

Properties batch 5, size 1
Remaining timeout: 176.40354371070862
##### Instance 1 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.47631860]], device='cuda:0') need to verify.
NAP Masks initialized
Model prediction is: tensor([-0.16497186, -0.68933529,  2.86758327,  0.94200748, -3.13602376,
        -3.27338743, -1.60777211, -2.08967018, -1.97366989, -5.50633192],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /13 start_node /20 with alignment adjustment
setting alpha for layer /15 start_node /20 with alignment adjustment
setting alpha for layer /17 start_node /20 with alignment adjustment
setting alpha for layer /19 start_node /20 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 64]), torch.Size([1, 1, 64]), torch.Size([1, 1, 64]), torch.Size([1, 1, 64])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.47631860]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/input.7,/input.11,/20
Keeping alphas for these layers: ['/20']
Keeping alphas for these layers: ['/20']
Node /13 input 0: size torch.Size([64]) unstable 8
Node /15 input 0: size torch.Size([64]) unstable 7
Node /17 input 0: size torch.Size([64]) unstable 2
Node /19 input 0: size torch.Size([64]) unstable 3
-----------------
# of unstable neurons: 20
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.3, 23] 
split level 1: [/input.7, 17] 
split level 2: [/input, 25] 
split level 3: [/input, 57] 
split level 4: [/input.3, 12] 
split level 5: [/input.3, 49] 
split level 6: [/input.3, 14] 
split level 7: [/input.11, 11] 
pruning_in_iteration open status: True
ratio of positive domain = 255 / 256 = 0.99609375
pruning-in-iteration extra time: 0.013281106948852539
Time: prepare 0.0898    bound 0.6545    transfer 0.0005    finalize 0.0470    func 0.7920    
Accumulated time: func 0.7920    prepare 0.0906    bound 0.6545    transfer 0.0005    finalize 0.0470    
Current worst splitting domains lb-rhs (depth):
-0.38308 (8), 
Length of domains: 1
Time: pickout 0.0010    decision 0.2795    set_bounds 0.0224    solve 0.7921    add 0.0134    
Accumulated time: pickout 0.0010    decision 0.2795    set_bounds 0.0224    solve 0.7921    add 0.0134    
Current (lb-rhs): -0.38308048248291016
1 domains visited
Cumulative time: 1.1320910453796387

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input, 58] 
split level 1: [/input.3, 7] 
split level 2: [/input, 46] 
split level 3: [/input, 44] 
split level 4: [/input.3, 0] 
split level 5: [/input.7, 33] 
split level 6: [/input.3, 58] 
split level 7: [/input, 37] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 256 = 0.0
pruning-in-iteration extra time: 0.00011491775512695312
Time: prepare 0.1215    bound 0.8039    transfer 0.0004    finalize 0.0445    func 0.9704    
Accumulated time: func 1.7624    prepare 0.2132    bound 1.4584    transfer 0.0009    finalize 0.0916    
Current worst splitting domains lb-rhs (depth):
-0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), -0.38308 (16), 
Length of domains: 256
Time: pickout 0.0011    decision 0.0981    set_bounds 0.0272    solve 0.9705    add 0.0048    
Accumulated time: pickout 0.0022    decision 0.3776    set_bounds 0.0495    solve 1.7627    add 0.0182    
Current (lb-rhs): -0.38308048248291016
257 domains visited
Cumulative time: 2.234013080596924

BaB round 3
batch: 256
splitting decisions: 
split level 0: [/input.11, 29] [/input.11, 29] [/input, 22] [/input, 22] [/input.11, 29] [/input.11, 29] [/input, 22] [/input, 22] [/input.11, 29] [/input.11, 29] 
pruning_in_iteration open status: False
ratio of positive domain = 32 / 512 = 0.0625
pruning-in-iteration extra time: 0.0001354217529296875
Time: prepare 0.1986    bound 0.7473    transfer 0.0008    finalize 0.1018    func 1.0487    
Accumulated time: func 2.8111    prepare 0.4122    bound 2.2057    transfer 0.0017    finalize 0.1934    
Current worst splitting domains lb-rhs (depth):
-0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), -0.38308 (17), 
Length of domains: 480
Time: pickout 0.0023    decision 0.0795    set_bounds 0.0112    solve 1.0489    add 0.0030    
Accumulated time: pickout 0.0044    decision 0.4571    set_bounds 0.0607    solve 2.8115    add 0.0212    
Current (lb-rhs): -0.38308048248291016
737 domains visited
Cumulative time: 3.379791736602783

BaB round 4
batch: 480
splitting decisions: 
split level 0: [/input, 22] [/input, 22] [/input.11, 29] [/input.11, 29] [/input, 22] [/input, 22] [/input.11, 29] [/input.11, 29] [/input, 22] [/input, 22] 
pruning_in_iteration open status: True
ratio of positive domain = 240 / 960 = 0.25
pruning-in-iteration extra time: 0.012087345123291016
Time: prepare 0.4554    bound 0.8641    transfer 0.0014    finalize 0.1587    func 1.4798    
Accumulated time: func 4.2908    prepare 0.8680    bound 3.0698    transfer 0.0031    finalize 0.3521    
Current worst splitting domains lb-rhs (depth):
-0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), -0.38308 (18), 
Length of domains: 720
Time: pickout 0.0032    decision 0.1313    set_bounds 0.0219    solve 1.4800    add 0.0024    
Accumulated time: pickout 0.0077    decision 0.5884    set_bounds 0.0826    solve 4.2915    add 0.0236    
Current (lb-rhs): -0.38308048248291016
1457 domains visited
Cumulative time: 5.020740985870361

BaB round 5
batch: 720
splitting decisions: 
split level 0: [/input, 7] [/input, 7] [/input, 7] [/input, 7] [/input, 7] [/input, 7] [/input, 7] [/input, 7] [/input, 7] [/input, 7] 
pruning_in_iteration open status: False
ratio of positive domain = 90 / 1440 = 0.0625
pruning-in-iteration extra time: 0.0001289844512939453
Time: prepare 0.5998    bound 0.7648    transfer 0.0013    finalize 0.2447    func 1.6108    
Accumulated time: func 5.9017    prepare 1.4682    bound 3.8346    transfer 0.0044    finalize 0.5968    
Current worst splitting domains lb-rhs (depth):
-0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), -0.38308 (19), 
Length of domains: 1350
Time: pickout 0.0016    decision 0.1721    set_bounds 0.0311    solve 1.6111    add 0.0314    
Accumulated time: pickout 0.0093    decision 0.7605    set_bounds 0.1137    solve 5.9026    add 0.0550    
Current (lb-rhs): -0.38308048248291016
2807 domains visited
Cumulative time: 6.8701865673065186

BaB round 6
batch: 1350
splitting decisions: 
split level 0: [/input.11, 22] [/input.11, 22] [/input.11, 22] [/input.11, 22] [/input.11, 22] [/input.11, 22] [/input.11, 22] [/input.11, 22] [/input.11, 22] [/input.11, 22] 
pruning_in_iteration open status: False
ratio of positive domain = 221 / 2700 = 0.08185185185185184
pruning-in-iteration extra time: 0.00012636184692382812
Time: prepare 1.0505    bound 0.8467    transfer 0.0011    finalize 0.4387    func 2.4287    
Accumulated time: func 8.3304    prepare 2.5191    bound 4.6813    transfer 0.0055    finalize 1.0355    
Current worst splitting domains lb-rhs (depth):
-0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), -0.38308 (20), 
Length of domains: 2538
Time: pickout 0.0020    decision 0.7424    set_bounds 0.0512    solve 2.4295    add 0.0309    
Accumulated time: pickout 0.0113    decision 1.5029    set_bounds 0.1649    solve 8.3322    add 0.0859    
Current (lb-rhs): -0.38308048248291016
5345 domains visited
Cumulative time: 10.129654884338379

BaB round 7
batch: 2538
all nodes are split!!
5345 domains visited
Length of domains: 0
Time: pickout 0.0028    decision 0.7424    set_bounds 0.0512    solve 2.4295    add 0.0309    
Accumulated time: pickout 0.0141    decision 1.5029    set_bounds 0.1649    solve 8.3322    add 0.0859    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5345 domains visited
Result: unknown in 14.1965 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-8.64097977,  5.64589977, -1.27093625, -1.32789648, -0.57596076,
         -3.47383118, -3.10187864,  0.38204619, -1.79084492, -3.62780237]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 8, 1, 7] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 6, 1, 7] with unstable size 5 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.11 using sparse-spec alpha [2, 4, 1, 7] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 6, 1, 7] with unstable size 5 total_size 64 output_shape torch.Size([64])
layer /15 start_node /input.11 using sparse-spec alpha [2, 4, 1, 7] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [5]; unstable size 5; total size 64 ([1, 64])
layer /17 start_node /input.11 using sparse-spec alpha [2, 4, 1, 5] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /17 start_node /20 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [3]; unstable size 3; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[11.64864254,  4.53666925,  5.99846935,  4.86213446,  8.21635818,
          6.06901073,  4.10316849,  5.20614529,  7.91858149]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0976 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[ 4.96992731, -4.85710430, -0.58728588, -3.23761821, -3.87638760,
         -1.45935941, -0.59908593, -4.75238371, -1.08425915, -2.78459716]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [4]; unstable size 4; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 2, 1, 4] with unstable size 1 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 4, 1, 4] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.11 using sparse-spec alpha [2, 8, 1, 4] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 4, 1, 1] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /15 start_node /input.11 using sparse-spec alpha [2, 8, 1, 1] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 64 ([1, 64])
layer /17 start_node /input.11 using sparse-spec alpha [2, 8, 1, 3] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /17 start_node /20 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[8.68797398, 4.58111429, 7.28050423, 7.51774216, 5.50996304, 4.41203356,
         8.71325302, 4.62699223, 6.59823036]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.1122 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-5.35094929, -4.11983538, -5.22045374, -4.26780796,  5.13524485,
         -3.74632645, -3.85695696,  0.15044788, -4.62004423,  1.84728348]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [5]; unstable size 5; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 3, 1, 5] with unstable size 2 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 2, 1, 5] with unstable size 1 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 2, 1, 2] with unstable size 1 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 64 ([1, 64])
layer /17 start_node /20 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [0]; unstable size 0; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[9.14167690, 8.23733330, 9.21781349, 8.22359371, 7.67425823, 7.82124901,
         4.93485498, 8.63203621, 3.17508316]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0958 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-8.93393135,  5.95266962, -1.58477557, -1.28545260, -0.45630649,
         -3.73821735, -3.42382526,  0.27745065, -1.66992569, -3.50250530]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [5]; unstable size 5; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 6, 1, 5] with unstable size 5 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 4, 1, 5] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.11 using sparse-spec alpha [2, 3, 1, 5] with unstable size 2 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 4, 1, 5] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /15 start_node /input.11 using sparse-spec alpha [2, 3, 1, 5] with unstable size 2 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [3]; unstable size 3; total size 64 ([1, 64])
layer /17 start_node /input.11 using sparse-spec alpha [2, 3, 1, 3] with unstable size 2 total_size 64 output_shape torch.Size([64])
layer /17 start_node /20 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [2]; unstable size 2; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[13.50996017,  6.37273121,  6.39772415,  5.67576694,  8.94082260,
          8.13002014,  5.12669373,  6.54547548,  8.54558182]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0982 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-6.40163136, -1.15184963, -5.07638693, -1.06029797,  3.62577987,
         -3.99248934, -5.04819584, -1.84745705, -2.28949475,  0.80467784]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [6]; unstable size 6; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 2, 1, 6] with unstable size 1 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.11 using sparse-spec alpha [2, 5, 1, 6] with unstable size 4 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [1]; unstable size 1; total size 64 ([1, 64])
layer /15 start_node /input.11 using sparse-spec alpha [2, 5, 1, 1] with unstable size 4 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [0]; unstable size 0; total size 64 ([1, 64])
layer /17 start_node /input.11 using sparse-spec alpha [2, 5, 1, 0] with unstable size 4 total_size 64 output_shape torch.Size([64])
layer /17 start_node /20 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [4]; unstable size 4; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[10.55340576,  5.23101139,  9.24145794,  5.28453827,  7.30078316,
          8.43723202,  5.41820288,  6.50259781,  2.80959964]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0864 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-5.69014072, -3.14252496, -4.90932465, -1.34991002,  0.87588680,
         -2.52568436, -6.47549248, -1.22875059, -2.25248504,  2.55743837]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [5]; unstable size 5; total size 64 ([1, 64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 2, 1, 5] with unstable size 1 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [0]; unstable size 0; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 2, 1, 0] with unstable size 1 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [1]; unstable size 1; total size 64 ([1, 64])
layer /17 start_node /20 using full alpha [2, 9, 1, 1] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [0]; unstable size 0; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 0] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.56926060, 5.10857439, 6.82638168, 3.26941061, 1.62916112, 4.27286863,
         8.27810192, 3.68112469, 4.27505589]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0988 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-1.28663719, -3.99490833, -1.10373771, -4.23692751, -1.20724130,
          0.49960455,  2.85003710, -4.39073753,  0.39848104, -2.44468045]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 8, 1, 7] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 8, 1, 7] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.11 using sparse-spec alpha [2, 4, 1, 7] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 8, 1, 7] with unstable size 7 total_size 64 output_shape torch.Size([64])
layer /15 start_node /input.11 using sparse-spec alpha [2, 4, 1, 7] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [7]; unstable size 7; total size 64 ([1, 64])
layer /17 start_node /input.11 using sparse-spec alpha [2, 4, 1, 7] with unstable size 3 total_size 64 output_shape torch.Size([64])
layer /17 start_node /20 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [3]; unstable size 3; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 3] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.64531851,  3.78138447,  1.17113328,  4.53952694, -1.59911633,
         -2.77058530,  1.76704168, -0.12270112, -0.62506080]], device='cuda:0') None
best_l after optimization: 9.749682426452637
alpha/beta optimization time: 1.0183970928192139
initial alpha-crown bounds: tensor([[ 1.77932644,  3.91954374,  1.33941829,  4.54768991, -1.14648962,
         -2.57829690,  2.20586824, -0.06014623, -0.25723147]], device='cuda:0')
Worst class: (+ rhs) -2.5782968997955322
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 64]), torch.Size([9, 1, 64]), torch.Size([9, 1, 64]), torch.Size([9, 1, 64])]

Properties batch 0, size 1
Remaining timeout: 178.88319993019104
##### Instance 8 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7793264389038086.

Properties batch 1, size 1
Remaining timeout: 178.79368209838867
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.919543743133545.

Properties batch 2, size 1
Remaining timeout: 178.7091143131256
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3394182920455933.

Properties batch 3, size 1
Remaining timeout: 178.61959075927734
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.547689914703369.

Properties batch 4, size 1
Remaining timeout: 178.53423142433167
##### Instance 8 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.14648962]], device='cuda:0') need to verify.
NAP Masks initialized
Model prediction is: tensor([-1.28663719, -3.99490833, -1.10373771, -4.23692751, -1.20724130,
         0.49960455,  2.85003710, -4.39073753,  0.39848104, -2.44468045],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /13 start_node /20 with alignment adjustment
setting alpha for layer /15 start_node /20 with alignment adjustment
setting alpha for layer /17 start_node /20 with alignment adjustment
setting alpha for layer /19 start_node /20 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 64]), torch.Size([1, 1, 64]), torch.Size([1, 1, 64]), torch.Size([1, 1, 64])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.14648962]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.3,/input.7,/input.11,/20
Keeping alphas for these layers: ['/20']
Keeping alphas for these layers: ['/20']
Node /13 input 0: size torch.Size([64]) unstable 7
Node /15 input 0: size torch.Size([64]) unstable 7
Node /17 input 0: size torch.Size([64]) unstable 7
Node /19 input 0: size torch.Size([64]) unstable 3
-----------------
# of unstable neurons: 24
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input.3, 27] 
split level 1: [/input.3, 20] 
split level 2: [/input.3, 30] 
split level 3: [/input.7, 27] 
split level 4: [/input.7, 57] 
split level 5: [/input.11, 45] 
split level 6: [/input.3, 49] 
split level 7: [/input.3, 46] 
pruning_in_iteration open status: True
ratio of positive domain = 228 / 256 = 0.890625
pruning-in-iteration extra time: 0.0323491096496582
Time: prepare 0.0736    bound 0.8283    transfer 0.0008    finalize 0.0360    func 0.9388    
Accumulated time: func 0.9388    prepare 0.0742    bound 0.8283    transfer 0.0008    finalize 0.0360    
Current worst splitting domains lb-rhs (depth):
-1.14649 (8), -1.14649 (8), -1.14649 (8), -1.14649 (8), -1.14649 (8), -1.14649 (8), -1.14649 (8), -1.10646 (8), -1.03712 (8), -0.94638 (8), -0.87209 (8), -0.85254 (8), -0.81809 (8), -0.79440 (8), -0.63012 (8), -0.56790 (8), -0.51319 (8), -0.46830 (8), -0.46802 (8), -0.41192 (8), 
Length of domains: 28
Time: pickout 0.0009    decision 0.0638    set_bounds 0.0217    solve 0.9389    add 0.0015    
Accumulated time: pickout 0.0009    decision 0.0638    set_bounds 0.0217    solve 0.9389    add 0.0015    
Current (lb-rhs): -1.1464896202087402
28 domains visited
Cumulative time: 1.0365402698516846

BaB round 2
batch: 28
splitting decisions: 
split level 0: [/input, 45] [/input, 32] [/input, 32] [/input, 32] [/input, 21] [/input, 32] [/input, 21] [/input, 32] [/input, 32] [/input, 21] 
split level 1: [/input, 21] [/input, 21] [/input, 21] [/input, 21] [/input, 41] [/input, 21] [/input, 32] [/input, 21] [/input, 21] [/input, 45] 
split level 2: [/input, 36] [/input, 36] [/input, 36] [/input, 54] [/input, 36] [/input, 36] [/input, 36] [/input, 36] [/input, 36] [/input, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 76 / 224 = 0.3392857142857143
pruning-in-iteration extra time: 0.020424604415893555
Time: prepare 0.0932    bound 0.8336    transfer 0.0009    finalize 0.0474    func 0.9752    
Accumulated time: func 1.9140    prepare 0.1679    bound 1.6619    transfer 0.0017    finalize 0.0834    
Current worst splitting domains lb-rhs (depth):
-1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), -1.14649 (11), 
Length of domains: 148
Time: pickout 0.0016    decision 0.0531    set_bounds 0.0082    solve 0.9754    add 0.0076    
Accumulated time: pickout 0.0024    decision 0.1169    set_bounds 0.0299    solve 1.9142    add 0.0091    
Current (lb-rhs): -1.1464896202087402
176 domains visited
Cumulative time: 2.083922863006592

BaB round 3
batch: 148
splitting decisions: 
split level 0: [/input, 45] [/input, 45] [/input, 45] [/input, 54] [/input, 45] [/input, 41] [/input, 41] [/input, 54] [/input, 41] [/input, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 117 / 296 = 0.3952702702702703
pruning-in-iteration extra time: 0.02315807342529297
Time: prepare 0.1223    bound 0.7957    transfer 0.0008    finalize 0.0505    func 0.9694    
Accumulated time: func 2.8834    prepare 0.2906    bound 2.4576    transfer 0.0026    finalize 0.1339    
Current worst splitting domains lb-rhs (depth):
-1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), -1.14649 (12), 
Length of domains: 179
Time: pickout 0.0053    decision 0.0669    set_bounds 0.0072    solve 0.9696    add 0.0020    
Accumulated time: pickout 0.0078    decision 0.1838    set_bounds 0.0371    solve 2.8838    add 0.0111    
Current (lb-rhs): -1.1464896202087402
355 domains visited
Cumulative time: 3.135972023010254

BaB round 4
batch: 179
splitting decisions: 
split level 0: [/input, 54] [/input.7, 34] [/input.7, 34] [/input.7, 34] [/input.7, 34] [/input.7, 34] [/input.7, 34] [/input.7, 34] [/input.7, 34] [/input.3, 5] 
pruning_in_iteration open status: True
ratio of positive domain = 146 / 358 = 0.4078212290502793
pruning-in-iteration extra time: 0.01941847801208496
Time: prepare 0.1445    bound 0.7753    transfer 0.0009    finalize 0.0678    func 0.9886    
Accumulated time: func 3.8720    prepare 0.4353    bound 3.2329    transfer 0.0035    finalize 0.2017    
Current worst splitting domains lb-rhs (depth):
-1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.14649 (13), -1.10646 (13), -1.10646 (13), -1.10646 (13), -1.10646 (13), 
Length of domains: 212
Time: pickout 0.0013    decision 0.0587    set_bounds 0.0085    solve 0.9889    add 0.0134    
Accumulated time: pickout 0.0091    decision 0.2425    set_bounds 0.0456    solve 3.8727    add 0.0245    
Current (lb-rhs): -1.1464896202087402
567 domains visited
Cumulative time: 4.208459854125977

BaB round 5
batch: 212
splitting decisions: 
split level 0: [/input.7, 34] [/input.3, 5] [/input.7, 10] [/input.3, 5] [/input.3, 5] [/input.7, 10] [/input.7, 10] [/input.3, 5] [/input.7, 10] [/input.7, 10] 
pruning_in_iteration open status: True
ratio of positive domain = 136 / 424 = 0.3207547169811321
pruning-in-iteration extra time: 0.01899433135986328
Time: prepare 0.2739    bound 0.9830    transfer 0.0015    finalize 0.1029    func 1.3615    
Accumulated time: func 5.2335    prepare 0.7096    bound 4.2160    transfer 0.0049    finalize 0.3046    
Current worst splitting domains lb-rhs (depth):
-1.14649 (14), -1.14649 (14), -1.14649 (14), -1.14649 (14), -1.14649 (14), -1.14649 (14), -1.14649 (14), -1.14649 (14), -1.14649 (14), -1.14649 (14), -1.13798 (14), -1.13759 (14), -1.11977 (14), -1.11558 (14), -1.10646 (14), -1.10646 (14), -1.10646 (14), -1.10646 (14), -1.10646 (14), -1.10646 (14), 
Length of domains: 288
Time: pickout 0.0023    decision 0.0917    set_bounds 0.0103    solve 1.3617    add 0.0076    
Accumulated time: pickout 0.0113    decision 0.3342    set_bounds 0.0560    solve 5.2344    add 0.0321    
Current (lb-rhs): -1.1464896202087402
855 domains visited
Cumulative time: 5.6832966804504395

BaB round 6
batch: 288
splitting decisions: 
split level 0: [/input.7, 10] [/input.7, 10] [/input.7, 8] [/input.7, 10] [/input.7, 10] [/input.7, 8] [/input.7, 8] [/input.7, 10] [/input.7, 8] [/input.7, 8] 
pruning_in_iteration open status: False
ratio of positive domain = 93 / 576 = 0.16145833333333337
pruning-in-iteration extra time: 0.0001270771026611328
Time: prepare 0.4115    bound 0.8168    transfer 0.0006    finalize 0.1001    func 1.3292    
Accumulated time: func 6.5627    prepare 1.1216    bound 5.0328    transfer 0.0055    finalize 0.4047    
Current worst splitting domains lb-rhs (depth):
-1.09823 (15), -1.09823 (15), -1.08744 (15), -1.08728 (15), -1.08046 (15), -1.08045 (15), -1.06818 (15), -1.06815 (15), -1.04730 (15), -1.04508 (15), -1.03907 (15), -1.03906 (15), -1.03754 (15), -1.03474 (15), -1.03006 (15), -1.02847 (15), -1.02837 (15), -1.02786 (15), -1.02138 (15), -1.02131 (15), 
Length of domains: 483
Time: pickout 0.0015    decision 0.1576    set_bounds 0.0162    solve 1.3294    add 0.0022    
Accumulated time: pickout 0.0128    decision 0.4918    set_bounds 0.0722    solve 6.5637    add 0.0343    
Current (lb-rhs): -1.0982294082641602
1338 domains visited
Cumulative time: 7.191155433654785

BaB round 7
batch: 483
splitting decisions: 
split level 0: [/input.7, 8] [/input.7, 8] [/input.7, 8] [/input.7, 8] [/input.7, 17] [/input.7, 8] [/input.7, 8] [/input.7, 17] [/input.7, 8] [/input.7, 8] 
pruning_in_iteration open status: False
ratio of positive domain = 185 / 966 = 0.1915113871635611
pruning-in-iteration extra time: 0.00031447410583496094
Time: prepare 0.3887    bound 0.8080    transfer 0.0007    finalize 0.1800    func 1.3775    
Accumulated time: func 7.9402    prepare 1.5107    bound 5.8408    transfer 0.0062    finalize 0.5846    
Current worst splitting domains lb-rhs (depth):
-1.09823 (16), -1.09823 (16), -1.08658 (16), -1.08655 (16), -1.08046 (16), -1.08045 (16), -1.06804 (16), -1.06802 (16), -1.03907 (16), -1.03906 (16), -1.02759 (16), -1.02753 (16), -1.02126 (16), -1.02122 (16), -1.00929 (16), -1.00888 (16), -0.99571 (16), -0.99569 (16), -0.98427 (16), -0.98425 (16), 
Length of domains: 966
Time: pickout 0.0013    decision 0.1189    set_bounds 0.0225    solve 1.3778    add 0.0028    
Accumulated time: pickout 0.0141    decision 0.6107    set_bounds 0.0947    solve 7.9415    add 0.0371    
Current (lb-rhs): -1.0982294082641602
2304 domains visited
Cumulative time: 8.715466737747192

BaB round 8
batch: 966
splitting decisions: 
split level 0: [/input.7, 17] [/input.3, 33] [/input.7, 17] [/input.7, 17] [/input, 55] [/input.3, 33] [/input.7, 17] [/input, 55] [/input.3, 33] [/input.7, 17] 
pruning_in_iteration open status: True
ratio of positive domain = 944 / 1932 = 0.4886128364389234
pruning-in-iteration extra time: 0.033397674560546875
Time: prepare 0.8476    bound 0.9816    transfer 0.0012    finalize 0.3274    func 2.1587    
Accumulated time: func 10.0989    prepare 2.3587    bound 6.8224    transfer 0.0074    finalize 0.9120    
Current worst splitting domains lb-rhs (depth):
-1.09823 (17), -1.09823 (17), -1.08656 (17), -1.08654 (17), -1.08046 (17), -1.08045 (17), -1.06804 (17), -1.06800 (17), -1.03907 (17), -1.03906 (17), -1.02584 (17), -1.02499 (17), -1.01974 (17), -1.01963 (17), -1.00929 (17), -1.00755 (17), -0.91603 (17), -0.91274 (17), -0.90493 (17), -0.90153 (17), 
Length of domains: 1845
Time: pickout 0.0016    decision 0.2499    set_bounds 0.0396    solve 2.1590    add 0.0039    
Accumulated time: pickout 0.0157    decision 0.8606    set_bounds 0.1343    solve 10.1006    add 0.0409    
Current (lb-rhs): -1.0982294082641602
4149 domains visited
Cumulative time: 11.172794580459595

BaB round 9
batch: 1845
splitting decisions: 
split level 0: [/input, 32] [/input.7, 17] [/input.7, 12] [/input.7, 12] [/input.7, 12] [/input.7, 17] [/input, 36] [/input, 32] [/input.7, 17] [/input.11, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 2404 / 3690 = 0.6514905149051491
pruning-in-iteration extra time: 0.04312276840209961
Time: prepare 1.7883    bound 1.0784    transfer 0.0018    finalize 0.8519    func 3.7215    
Accumulated time: func 13.8204    prepare 4.1474    bound 7.9008    transfer 0.0092    finalize 1.7639    
Current worst splitting domains lb-rhs (depth):
-1.09823 (18), -1.09823 (18), -1.09823 (18), -1.09823 (18), -1.08656 (18), -1.08656 (18), -1.08654 (18), -1.08654 (18), -1.08046 (18), -1.08046 (18), -1.08045 (18), -1.08045 (18), -1.06804 (18), -1.06804 (18), -1.06800 (18), -1.06800 (18), -1.03907 (18), -1.03906 (18), -1.03573 (18), -1.03567 (18), 
Length of domains: 1768
Time: pickout 0.0025    decision 0.5073    set_bounds 0.1786    solve 3.7225    add 0.0157    
Accumulated time: pickout 0.0182    decision 1.3679    set_bounds 0.3129    solve 13.8231    add 0.0566    
Current (lb-rhs): -1.0982294082641602
5917 domains visited
Cumulative time: 15.61900019645691

BaB round 10
batch: 1768
splitting decisions: 
split level 0: [/input.3, 33] [/input.7, 12] [/input.3, 5] [/input, 55] [/input.11, 28] [/input.11, 28] [/input.7, 12] [/input.3, 33] [/input.7, 12] [/input, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 1416 / 3536 = 0.4004524886877828
pruning-in-iteration extra time: 0.030643939971923828
Time: prepare 1.4529    bound 1.0496    transfer 0.0013    finalize 0.5933    func 3.0979    
Accumulated time: func 16.9183    prepare 5.6009    bound 8.9504    transfer 0.0105    finalize 2.3573    
Current worst splitting domains lb-rhs (depth):
-1.09823 (19), -1.09823 (19), -1.09823 (19), -1.09823 (19), -1.09823 (19), -1.09823 (19), -1.09823 (19), -1.09813 (19), -1.08656 (19), -1.08656 (19), -1.08656 (19), -1.08656 (19), -1.08654 (19), -1.08654 (19), -1.08654 (19), -1.08646 (19), -1.08046 (19), -1.08046 (19), -1.08046 (19), -1.08045 (19), 
Length of domains: 2078
Time: pickout 0.0024    decision 0.4199    set_bounds 0.0824    solve 3.0985    add 0.0101    
Accumulated time: pickout 0.0207    decision 1.7878    set_bounds 0.3953    solve 16.9216    add 0.0667    
Current (lb-rhs): -1.0982294082641602
7995 domains visited
Cumulative time: 19.24693250656128

BaB round 11
batch: 2078
splitting decisions: 
split level 0: [/input, 55] [/input, 55] [/input.11, 41] [/input.7, 12] [/input.7, 12] [/input, 54] [/input.11, 41] [/input.11, 41] [/input.7, 12] [/input, 55] 
pruning_in_iteration open status: False
ratio of positive domain = 646 / 4156 = 0.15543792107795962
pruning-in-iteration extra time: 0.0002524852752685547
Time: prepare 1.6770    bound 0.8435    transfer 0.0015    finalize 0.6793    func 3.2022    
Accumulated time: func 20.1205    prepare 7.2784    bound 9.7940    transfer 0.0121    finalize 3.0366    
Current worst splitting domains lb-rhs (depth):
-1.09823 (20), -1.09823 (20), -1.09823 (20), -1.09823 (20), -1.09823 (20), -1.09823 (20), -1.09823 (20), -1.09803 (20), -1.08656 (20), -1.08656 (20), -1.08656 (20), -1.08656 (20), -1.08654 (20), -1.08654 (20), -1.08654 (20), -1.08634 (20), -1.08080 (20), -1.08046 (20), -1.08046 (20), -1.08046 (20), 
Length of domains: 3510
Time: pickout 0.0027    decision 0.5086    set_bounds 0.1029    solve 3.2029    add 0.0211    
Accumulated time: pickout 0.0234    decision 2.2964    set_bounds 0.4982    solve 20.1245    add 0.0879    
Current (lb-rhs): -1.0982294082641602
11505 domains visited
Cumulative time: 23.096149921417236

BaB round 12
batch: 3510
splitting decisions: 
split level 0: [/input.7, 12] [/input.7, 12] [/input.7, 12] [/input, 55] [/input, 55] [/input.7, 12] [/input.7, 12] [/input.7, 12] [/input.7, 12] [/input.7, 12] 
pruning_in_iteration open status: True
ratio of positive domain = 1706 / 7020 = 0.243019943019943
pruning-in-iteration extra time: 0.009993314743041992
Time: prepare 2.8839    bound 1.0993    transfer 0.0017    finalize 1.1890    func 5.1750    
Accumulated time: func 25.2955    prepare 10.1629    bound 10.8933    transfer 0.0137    finalize 4.2256    
Current worst splitting domains lb-rhs (depth):
-1.09823 (21), -1.09823 (21), -1.09823 (21), -1.09823 (21), -1.09823 (21), -1.09795 (21), -1.09793 (21), -1.09792 (21), -1.09790 (21), -1.09765 (21), -1.09713 (21), -1.09629 (21), -1.09626 (21), -1.09622 (21), -1.09621 (21), -1.08656 (21), -1.08656 (21), -1.08656 (21), -1.08656 (21), -1.08654 (21), 
Length of domains: 5435
Time: pickout 0.0049    decision 0.5755    set_bounds 0.2527    solve 5.1763    add 0.0530    
Accumulated time: pickout 0.0283    decision 2.8719    set_bounds 0.7509    solve 25.3008    add 0.1409    
Current (lb-rhs): -1.0982294082641602
16940 domains visited
Cumulative time: 29.176843881607056

BaB round 13
batch: 4096
splitting decisions: 
split level 0: [/input, 41] [/input, 36] [/input.7, 34] [/input, 41] [/input, 54] [/input, 41] [/input, 54] [/input, 32] [/input.3, 5] [/input, 36] 
pruning_in_iteration open status: False
ratio of positive domain = 1379 / 8192 = 0.1683349609375
pruning-in-iteration extra time: 0.00012183189392089844
Time: prepare 3.3580    bound 0.9855    transfer 0.0014    finalize 1.3584    func 5.7039    
Accumulated time: func 30.9994    prepare 13.5213    bound 11.8788    transfer 0.0152    finalize 5.5840    
Current worst splitting domains lb-rhs (depth):
-1.09823 (22), -1.09823 (22), -1.09823 (22), -1.09823 (22), -1.09823 (22), -1.09823 (22), -1.09823 (22), -1.09823 (22), -1.09795 (22), -1.09793 (22), -1.09792 (22), -1.09790 (22), -1.09785 (22), -1.09765 (22), -1.09725 (22), -1.09725 (22), -1.09722 (22), -1.09713 (22), -1.09687 (22), -1.09686 (22), 
Length of domains: 8112
Time: pickout 0.0035    decision 0.8557    set_bounds 0.1712    solve 5.7053    add 0.0072    
Accumulated time: pickout 0.0317    decision 3.7276    set_bounds 0.9220    solve 31.0061    add 0.1480    
Current (lb-rhs): -1.0982294082641602
23713 domains visited
Cumulative time: 35.93733835220337

BaB round 14
batch: 4096
splitting decisions: 
split level 0: [/input.3, 5] [/input, 55] [/input.3, 5] [/input, 36] [/input.3, 33] [/input, 55] [/input.3, 5] [/input, 55] [/input.3, 33] [/input.11, 28] 
pruning_in_iteration open status: False
ratio of positive domain = 1098 / 8192 = 0.134033203125
pruning-in-iteration extra time: 0.000362396240234375
Time: prepare 3.3917    bound 0.9516    transfer 0.0014    finalize 1.2873    func 5.6331    
Accumulated time: func 36.6325    prepare 16.9135    bound 12.8305    transfer 0.0166    finalize 6.8713    
Current worst splitting domains lb-rhs (depth):
-1.09823 (22), -1.09823 (23), -1.09823 (23), -1.09823 (23), -1.09823 (23), -1.09823 (23), -1.09823 (23), -1.09823 (23), -1.09823 (23), -1.09823 (22), -1.09823 (23), -1.09795 (22), -1.09793 (23), -1.09793 (23), -1.09792 (22), -1.09790 (22), -1.09775 (23), -1.09765 (22), -1.09725 (23), -1.09725 (23), 
Length of domains: 11107
Time: pickout 0.0056    decision 1.2105    set_bounds 0.1786    solve 5.6344    add 0.0581    
Accumulated time: pickout 0.0373    decision 4.9381    set_bounds 1.1007    solve 36.6406    add 0.2061    
Current (lb-rhs): -1.0982294082641602
30804 domains visited
Cumulative time: 43.037989139556885

BaB round 15
batch: 4096
splitting decisions: 
split level 0: [/input.11, 28] [/input.11, 28] [/input.11, 28] [/input, 55] [/input.11, 28] [/input.11, 28] [/input.11, 28] [/input.11, 28] [/input, 55] [/input.11, 28] 
pruning_in_iteration open status: False
ratio of positive domain = 1070 / 8192 = 0.130615234375
pruning-in-iteration extra time: 0.0007712841033935547
Time: prepare 3.2489    bound 1.0569    transfer 0.0018    finalize 1.3023    func 5.6109    
Accumulated time: func 42.2434    prepare 20.1629    bound 13.8874    transfer 0.0184    finalize 8.1736    
Current worst splitting domains lb-rhs (depth):
-1.09823 (24), -1.09823 (22), -1.09823 (24), -1.09823 (23), -1.09823 (23), -1.09823 (24), -1.09823 (24), -1.09823 (24), -1.09823 (22), -1.09823 (23), -1.09823 (24), -1.09795 (22), -1.09793 (23), -1.09793 (24), -1.09792 (22), -1.09790 (22), -1.09767 (24), -1.09765 (22), -1.09725 (24), -1.09725 (24), 
Length of domains: 14133
Time: pickout 0.0026    decision 2.2223    set_bounds 0.1658    solve 5.6122    add 0.0271    
Accumulated time: pickout 0.0399    decision 7.1605    set_bounds 1.2664    solve 42.2528    add 0.2333    
Current (lb-rhs): -1.0982294082641602
37926 domains visited
Cumulative time: 51.090142011642456

BaB round 16
batch: 4096
all nodes are split!!
37926 domains visited
Length of domains: 10037
Time: pickout 0.0036    decision 2.2223    set_bounds 0.1658    solve 5.6122    add 0.0271    
Accumulated time: pickout 0.0435    decision 7.1605    set_bounds 1.2664    solve 42.2528    add 0.2333    
Current (lb-rhs): -1.0982294082641602
37926 domains visited
Result: unknown in 53.3072 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NAP Masks initialized
Model: NAPConstrainedBoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundFlatten(name=/11, inputs=[/0], perturbed=True)
  (/input): BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True)
  (/13): BoundRelu(name=/13, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True)
  (/17): BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
  (/input.11): BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True)
  (/19): BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
  (/20): BoundLinear(name=/20, inputs=[/19, /9, /10], perturbed=True)
)
Original output: tensor([[-4.69823837, -5.09704447, -4.14712143, -3.24592543,  1.14357507,
         -4.09823656, -6.96949434,  0.18440041, -2.41712999,  3.33927321]],
       device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/11, /1, /2], perturbed=True): [(BoundRelu(name=/13, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/13, /3, /4], perturbed=True): [(BoundRelu(name=/15, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/15, /5, /6], perturbed=True): [(BoundRelu(name=/17, inputs=[/input.7], perturbed=True), 0)]
  BoundLinear(name=/input.11, inputs=[/17, /7, /8], perturbed=True): [(BoundRelu(name=/19, inputs=[/input.11], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/13, inputs=[/input], perturbed=True)
   BoundRelu(name=/15, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/17, inputs=[/input.7], perturbed=True)
   BoundRelu(name=/19, inputs=[/input.11], perturbed=True)
layer /13 using sparse-features alpha with shape [8]; unstable size 8; total size 64 ([1, 64])
layer /13 start_node /input.3 using sparse-spec alpha [2, 7, 1, 8] with unstable size 6 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.7 using sparse-spec alpha [2, 9, 1, 8] with unstable size 8 total_size 64 output_shape torch.Size([64])
layer /13 start_node /input.11 using sparse-spec alpha [2, 6, 1, 8] with unstable size 5 total_size 64 output_shape torch.Size([64])
layer /13 start_node /20 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [6]; unstable size 6; total size 64 ([1, 64])
layer /15 start_node /input.7 using sparse-spec alpha [2, 9, 1, 6] with unstable size 8 total_size 64 output_shape torch.Size([64])
layer /15 start_node /input.11 using sparse-spec alpha [2, 6, 1, 6] with unstable size 5 total_size 64 output_shape torch.Size([64])
layer /15 start_node /20 using full alpha [2, 9, 1, 6] with unstable size None total_size 9 output_shape 9
layer /17 using sparse-features alpha with shape [8]; unstable size 8; total size 64 ([1, 64])
layer /17 start_node /input.11 using sparse-spec alpha [2, 6, 1, 8] with unstable size 5 total_size 64 output_shape torch.Size([64])
layer /17 start_node /20 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [5]; unstable size 5; total size 64 ([1, 64])
layer /19 start_node /20 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.39817810, 5.52178335, 4.66933250, 3.80883932, 0.44054487, 6.05858898,
         5.68160391, 2.42843008, 2.57657671]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.1187 seconds
############# Summary #############
Final verified acc: 80.0% (total 10 examples)
Problem instances count: 10 , total verified (safe/unsat): 8 , total falsified (unsafe/sat): 0 , timeout: 2
mean time for ALL instances (total 10):6.974267279577935, max time: 53.307157039642334
mean time for verified SAFE instances(total 8): 0.279880166053772, max time: 1.5314850807189941
mean time for verified SAFE + TIMEOUT instances (total 10): 6.9742742538452145, max time: [14.196544170379639, 53.307157039642334] 
safe-incomplete (total 8), index: [0, 2, 3, 4, 5, 6, 7, 9]
unknown (total 2), index: [1, 8]
